---
kind: Template
apiVersion: v1
metadata:
  name: glusters3template
  annotations:
    description: Gluster s3 service template
    tags: glusterfs,heketi,gluster-s3
objects:
- kind: Service
  apiVersion: v1
  metadata:
    name: glusters3service
    labels:
      name: glusters3
  spec:
    ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      name: glusters3
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
- kind: Route
  apiVersion: v1
  metadata:
    name: glusters3object
    labels:
      glusterfs: glusters3object-route
  spec:
    to:
      kind: Service
      name: glusters3service
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: glusterfs-s3-claim
    annotations:
      volume.beta.kubernetes.io/storage-class: "${STORAGE_CLASS}"
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: "${VOLUME_CAPACITY}"
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: glusterfs-s3-claim-meta
    annotations:
      volume.beta.kubernetes.io/storage-class: "${STORAGE_CLASS}"
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 1Gi
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: glusters3
    labels:
      name: glusters3
    annotations:
      openshift.io/scc: privileged
      description: Defines how to deploy gluster s3 object storage
  spec:
    replicas: 1
    selector:
      name: glusters3
    template:
      metadata:
        name: glusters3
        labels:
          name: glusters3
      spec:
        volumes:
        - name: glusterfs-cgroup
          hostPath:
            path: "/sys/fs/cgroup"
        - name: gluster-vol1
          persistentVolumeClaim:
            claimName: glusterfs-s3-claim
        - name: gluster-vol2
          persistentVolumeClaim:
            claimName: glusterfs-s3-claim-meta
        containers:
        - name: glusters3
          image: gluster/gluster-object
          imagePullPolicy: IfNotPresent
          ports:
          - name: gluster
            containerPort: 8080
            protocol: TCP
          env:
          - name: GLUSTER_VOLUMES
            value: "${GLUSTER_VOLUMES}"
          - name: GLUSTER_USER
            value: "${GLUSTER_USER}"
          - name: GLUSTER_PASSWORD
            value: "${GLUSTER_PASSWORD}"
          resources: {}
          volumeMounts:
          - name: gluster-vol1
            mountPath: "/mnt/gluster-object/${GLUSTER_VOLUMES}"
          - name: gluster-vol2
            mountPath: "/mnt/gluster-object/gsmetadata"
          - name: glusterfs-cgroup
            readOnly: true
            mountPath: "/sys/fs/cgroup"
          terminationMessagePath: "/dev/termination-log"
          securityContext:
            privileged: true
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        serviceAccountName: default
        serviceAccount: default
        securityContext: {}
  status: {}
parameters:
- name: GLUSTER_VOLUMES
  displayName: Gluster volume
  description: S3 storage account with underlying gluster volume
  value: test
  required: true
- name: GLUSTER_USER
  displayName: Gluster user
  description: Gluster user who can access the s3 storage service
  value: admin
  required: true
- name: GLUSTER_PASSWORD
  displayName: Gluster user authentication
  description: Gluster user password
  value: testing
  required: true
- name: STORAGE_CLASS
  displayName: Storage class with GlusterFS provisioner
  description: Storage class with GlusterFS provisioner for creating gluster volumes
  value: s3storageclass
  required: true
- name: VOLUME_CAPACITY
  displayName: Volume capacity
  description: Volume capacity availabe for s3 object store, e.g. 1Gi, 2Gi.
  value: 2Gi
  required: true
